version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - MINIO_USE_SSL=false
      - DRAGONFLY_HOST=dragonfly
      - DRAGONFLY_PORT=6379
      - DRAGONFLY_PASSWORD=
    depends_on:
      - minio
      - dragonfly
    networks:
      - app-network
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  code-runner:
    build:
      context: ./code-runner
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=dragonfly:6379
      - REDIS_PASSWORD=
      - REDIS_DB=0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin
      - USE_TMPFS=true
    depends_on:
      - minio
      - dragonfly
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data
    networks:
      - app-network
    restart: unless-stopped

  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly
    ports:
      - "6379:6379"
    command: dragonfly --proactor_threads=4
    networks:
      - app-network
    restart: unless-stopped
    ulimits:
      memlock: -1

networks:
  app-network:
    driver: bridge

volumes:
  minio-data: